Index: src/cxa_guard_impl.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cxa_guard_impl.h b/src/cxa_guard_impl.h
--- a/src/cxa_guard_impl.h	
+++ b/src/cxa_guard_impl.h	(date 1680688700108)
@@ -60,6 +60,7 @@
 #include <cstring>
 #include <limits.h>
 #include <stdlib.h>
+#include <uk/syscall.h>
 
 #ifndef _LIBCXXABI_HAS_NO_THREADS
 #  if defined(__ELF__) && defined(_LIBCXXABI_LINK_PTHREAD_LIB)
@@ -161,7 +162,7 @@
 #elif defined(SYS_gettid) && defined(_LIBCPP_HAS_THREAD_API_PTHREAD)
 uint32_t PlatformThreadID() {
   static_assert(sizeof(pid_t) == sizeof(uint32_t), "");
-  return static_cast<uint32_t>(syscall(SYS_gettid));
+  return static_cast<uint32_t>(uk_syscall_static(SYS_gettid));
 }
 #else
 constexpr uint32_t (*PlatformThreadID)() = nullptr;
@@ -414,13 +415,13 @@
 #if defined(SYS_futex)
 void PlatformFutexWait(int* addr, int expect) {
   constexpr int WAIT = 0;
-  syscall(SYS_futex, addr, WAIT, expect, 0);
+  uk_syscall_static(SYS_futex, addr, WAIT, expect, 0);
   __tsan_acquire(addr);
 }
 void PlatformFutexWake(int* addr) {
   constexpr int WAKE = 1;
   __tsan_release(addr);
-  syscall(SYS_futex, addr, WAKE, INT_MAX);
+  uk_syscall_static(SYS_futex, addr, WAKE, INT_MAX);
 }
 #else
 constexpr void (*PlatformFutexWait)(int*, int) = nullptr;
